##  $Revision: 1.1 $
##
## NeXT makefile for editline library.
##

##  Set your options:
##	-DANSI_ARROWS		ANSI arrows keys work like emacs.
##	-DHAVE_TCGETATTR	Have tcgetattr(), tcsetattr().
##	-DHIDE			Make static functions static (non debug).
##	-DHIST_SIZE=n		History size.
##	-DNEED_STRDUP		Don't have strdup().
##	-DUNIQUE_HISTORY	Don't save command if same as last one.
##	-DUSE_DIRENT		Use <dirent.h>, not <sys/dir.h>?
##	-DHAVE_LIBTERMCAP		Use the termcap library for terminal size
##				see LDFLAGS, below, if you set this.
##	-DNEED_PERROR		Don't have perror() (used in testit)
DEFS	= -DANSI_ARROWS -DHIDE -DHAVE_LIBTERMCAP \
          -DUSE_DIRENT -DSYS_UNIX -DHIST_SIZE=25 -DUNIQUE_HISTORY -DNEED_STRDUP

##  Set your C compiler:
WARN	= -Wall -Wshadow -Wpointer-arith -Wcast-qual -Wwrite-strings \
	-Wunused -Wcomment -Wswitch
CC	= cc 
#CC	= cc
CFLAGS	= -O2 $(DEFS) -D_POSIX_SOURCE

##  If you have -DHAVE_LIBTERMCAP, set this as appropriate:
#LDFLAGS = -ltermlib
LDFLAGS = -ltermcap

##  Set ranlib as appropriate:
RANLIB	= ranlib
#RANLIB	= echo

##  End of configuration.

SOURCES	= editline.c complete.c sysunix.c
OBJECTS	= editline.o complete.o sysunix.o
SHARFILES =	README Makefile editline.3 editline.h unix.h editline.c \
		complete.c sysunix.c testit.c \
		Make.os9 os9.h sysos9.c

.c.o:
	$(CC) -c $(CFLAGS) $*.c

all:		libedit.a

testit:		testit.c libedit.a
	$(CC) $(CFLAGS) -o testit testit.c libedit.a $(LDFLAGS)

shar:		$(SHARFILES)
	shar $(SHARFILES) >shar

complete.o : complete.c editline.h unix.h 

editline.o : editline.c editline.h unix.h edlproto.h 

sysunix.o : sysunix.c editline.h unix.h 

clean:
	rm -f *.[oa] testit foo core tags lint lint.all a.out shar

dep:	
	cc -MMD $(CFLAGS) $(SOURCES)

lint:
	lint -p $(DEFS) $(SOURCES) >lint.all

libedit.a:	$(OBJECTS)
	@rm -f $@
	ar r $@ $(OBJECTS)
	$(RANLIB) $@

